name: Build, Deploy, and SonarCloud Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Java (for example, Java 11 in this case)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project with Maven
      - name: Build with Maven
        run: mvn clean install

      # Upload the JAR as an artifact using v4
      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bus-booking-app
          path: target/simple-parcel-service-app-1.0-SNAPSHOT.jar

      # Run the Spring Boot application (use spring-boot:run)
      - name: Run Spring Boot App
        run: mvn spring-boot:run & 
        env:
          SPRING_PROFILES_ACTIVE: "test"

      # Display the IP address and port number for accessing the app
      - name: Display IP Address and Port
        run: |
          echo "Fetching the runner's IP address..."
          IP_ADDRESS=$(curl -s ifconfig.me) # This fetches the public IP of the runner
          PORT=8080
          echo "The app is accessible at: http://$IP_ADDRESS:$PORT"

      # Validate that the application is running by sending a request to the app
      - name: Validate App is Running
        run: |
          echo "Waiting for the app to start..."
          sleep 15 # Allow some time for the Spring Boot app to fully start
          echo "Checking if the app is running..."
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080)
          if [ "$RESPONSE" -eq 200 ]; then
            echo "The app is running successfully!"
          else
            echo "The app failed to start. HTTP response code: $RESPONSE"
            exit 1
          fi

      # Wait for 5 minutes (this is an arbitrary wait time, you may adjust as needed)
      - name: Wait for 3 sec
        run: |
          echo "App has been running for 3 sec. Waiting..."
          sleep 3  # Wait for 5 minutes (3 seconds)

      # Stop the Spring Boot app gracefully using spring-boot:stop
      - name: Gracefully Stop Spring Boot App
        run: |
          echo "Stopping the app gracefully..."
          mvn spring-boot:stop

      # SonarCloud Integration
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectKey: ${{ env.SONAR_PROJECT_KEY }}  # Use the environment variable for the Sonar project key
          organization: ${{ env.SONAR_ORG }}  # Use the environment variable for the Sonar organization
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}  # Reference SONAR_TOKEN from the environment variables
